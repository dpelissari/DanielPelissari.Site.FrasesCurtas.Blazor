@inject NavigationManager NavigationManager
@inject ICategoriaFraseService CategoriaFraseService;
@inject IFraseService FraseService;
@inject IAutorService AutorService;

@page "/categoria/"
@page "/categoria/{id}"
<PageTitle>@categoria.Categoria</PageTitle>

<div class="container mt80">
    <h1>@categoria.Categoria</h1>

    @if (categoria != null)
    {
        if (frases != null && frases.Any())
        {
            <Repeater DataSource="frases" Context="frase">
                <ItemTemplate>
                    <div class="card sombra">
                        <p class="categoria">@categoria.Categoria</p>
                        <p class="frase">@frase.Descricao</p>
                        <p class="autor">Autor: @frase.Autor.Nome</p>
                        <Compartilhamento Modelo="frase" />
                    </div>
                </ItemTemplate>
            </Repeater>
        }
        else
        {
            <div class="card sombra">
                <p>Nenhuma frase encontrada para a categoria @categoria.Categoria.</p>
            </div>
        }
    }

    <NavLink href="categorias/" class="link">Voltar para a lista de categorias</NavLink>
</div>


@code {
    [Parameter] public string? Id { get; set; }

    private CategoriaFrase categoria = new();
    private IQueryable<Frase>? frases;
    private string? mensagem;

    protected override async Task OnInitializedAsync() {

        if (!string.IsNullOrEmpty(Id))
        {
            if (Guid.TryParse(Id, out Guid idCategoria))
            {
                frases = await FraseService.BuscarPorIdCategoria(idCategoria);
                categoria = await CategoriaFraseService.BuscarPor(idCategoria);

                // Alimenta autores e categoria
                foreach (var frase in frases)
                {
                    frase.Autor = await AutorService.BuscarPor(frase.IdAutor);
                }
            }
            else
            {
                // ID inválido, redireciona para listagem de categorias
                NavigationManager.NavigateTo("/categorias");
            }
        }

    }
}