@page "/atualizar-frase/{id}";

@using FrasesCurtas.Models;
@inject NavigationManager NavigationManager;
@inject FrasesCurtas.Services.IFraseService FraseService;

<h3>Atualizar Frase</h3>

<EditForm Model="frase" OnValidSubmit="AtualizarFrases">
    <div class="form-group mb-3">
        <label for="descricaoFrase">Frase</label>
        <InputText @bind-Value="frase.Descricao" class="form-control" id="descricaoFrase"></InputText>
    </div>
    <div class="form-group mb-3">
        <label for="dataCadastroFrase">Data Cadastro</label>
        <InputText @bind-Value="frase.DataCadastro" class="form-control" id="dataCadastroFrase"></InputText>
    </div>
    <div class="form-group mb-3">
        <label for="arquivadaFrase">Arquvida</label>
        <InputText @bind-Value="frase.Arquivada" class="form-control" id="arquivadaFrase"></InputText>
    </div>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <button class="btn btn-success" type="submit">Incluir</button>

</EditForm>

@code {
    Frase frase = new();

    [Parameter]public string id{ get; set; }  

    protected override async Task OnInitializedAsync()
    {
        frase = await FraseService.BuscarPor(Guid.Parse(id));
    }

    async Task AtualizarFrases()
    {
        await FraseService.Atualizar(frase);

        NavigationManager.NavigateTo("/frases");
    }
}
