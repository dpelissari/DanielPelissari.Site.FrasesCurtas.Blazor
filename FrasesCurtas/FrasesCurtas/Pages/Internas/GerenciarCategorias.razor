@page "/int/categorias/gerenciar-categoria/{id?}";
@page "/int/categorias/nova";
@attribute [Authorize(Roles = "Administrador")]

@using FrasesCurtas.Componentes
@using FrasesCurtas.Interfaces;
@using FrasesCurtas.Models

@inject NavigationManager NavigationManager
@inject ICategoriaFraseService CategoriaFraseService
@layout InternasLayout;

<div class="container">
    <div class="card mt80">
    @if (modoEdicao)
    {
        <h1>Editar Categoria</h1>

        <EditForm Model="categoria" OnValidSubmit="AtualizarCategoriaFrase">
            <div class ="cmp">
                <label>Nome</label>
                <InputText @bind-Value="categoria.Categoria"></InputText>
                <ValidationMessage For="@(() => categoria.Categoria)" />
            </div>
            <div class="cmp">
                <label>Categoria ativa?</label>
                <InputSelect @bind-Value="categoria.Ativo">
                    <option value="true">Sim</option>
                    <option value="false">Não</option>
                </InputSelect>
                <ValidationMessage For="@(() => categoria.Ativo)" />
            </div>
            <div class="cmp">
                <label>Descrição</label>
                <InputTextArea @bind-Value="categoria.Descricao" rows="5"></InputTextArea>
                <ValidationMessage For="@(() => categoria.Descricao)" />
            </div>

            <DataAnnotationsValidator />

            <div class="acoes mtb20">
                <button class="btn btn-amarelo" type="submit">ATUALIZAR</button>
                <NavLink class="btn btn-vermelho" href="int/categorias/">CANCELAR</NavLink>
            </div>

        </EditForm>
    }
    else
    {
        <h1>Incluir Categoria</h1>
        <EditForm Model="categoria" OnValidSubmit="CriarCategoriaFrase">
            <div class="cmp">
                <label>Nome</label>
                <InputText @bind-Value="categoria.Categoria"></InputText>
            </div>
            <div class="cmp">
                <label for="arquivadaFrase">Categoria ativa?</label>
                <InputSelect @bind-Value="categoria.Ativo">
                    <option value="true">Sim</option>
                    <option value="false" selected>Não</option>
                </InputSelect>
                <ValidationMessage For="@(() => categoria.Ativo)" />
            </div>
            <div class="cmp">
                <label>Descrição</label>
                <InputTextArea @bind-Value="categoria.Descricao" rows="5"></InputTextArea>
            </div>

            <DataAnnotationsValidator />

            <div class="acoes mtb20">
                <button class="btn btn-amarelo" type="submit">INCLUIR</button>
                <NavLink class="btn btn-vermelho" href="int/categorias/">CANCELAR</NavLink>
            </div>
        </EditForm>
    }
    </div>
</div>

@code {
    CategoriaFrase categoria = new();
    bool modoEdicao = false;

    [Parameter]
    public string id { get; set; }

    protected override async Task OnInitializedAsync() {
        if (!string.IsNullOrEmpty(id))
        {
            if (Guid.TryParse(id, out Guid idCategoria))
            {
                categoria = await CategoriaFraseService.BuscarPor(idCategoria);
                modoEdicao = true;
            } else
            {
                // ID inválido, redireciona para listagem de categorias
                NavigationManager.NavigateTo("/int/categorias");
            }
        }
    }

    async Task CriarCategoriaFrase() {
        categoria.GerarNovoId();
        await CategoriaFraseService.Adicionar(categoria);
        NavigationManager.NavigateTo("/int/categorias");
    }

    async Task AtualizarCategoriaFrase() {
        await CategoriaFraseService.Atualizar(categoria);
        NavigationManager.NavigateTo("/int/categorias");
    }
}
