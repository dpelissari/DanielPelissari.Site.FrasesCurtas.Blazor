@inject IJSRuntime JSRuntime
@inject IAutorService AutorService;

@page "/int/autores"
@attribute [Authorize(Roles = "Administrador")]

<PageTitle>Geranciar autores</PageTitle>

<div class="container">
    <div class="card mt80">
        <div class="cab">
            <h1>Autores</h1>
            <a href="/int/autores/novo" class="btn btn-roxo">INCLUIR AUTOR</a>
        </div>
        <ListaPaginada Dados="autores.OrderBy(a => a.Nome)" Context="a">
            <ConteudoPrincipal>
                <div class="item sombra">
                    <div class="grupo">
                        <div>
                            <label>Nome</label>
                            <div>@a.Nome</div>
                        </div>
                        <div>
                            <label>Autor ativo?</label>
                            <div>@(a.Ativo == true ? "Sim" : "Não")</div>
                        </div>
                        <div>
                            <label>Data de cadastro</label>
                            <p>@a.DataCadastro.ToShortDateString().ToString()</p>
                        </div>
                        <div class="acoes">
                            <a href="/int/autores/gerenciar-autor/@a.Id" class="btn btn-amarelo">Editar</a>
                            <a @onclick="async () => await ApagarAutor(a.Id)" class="btn btn-vermelho">Excluir</a>
                        </div>
                    </div>
   
                </div>
            </ConteudoPrincipal>
        </ListaPaginada>
    </div>
</div>

@code {
    private IQueryable<Autor> autores;

    // ao inicializar busca todos autores
    protected override async Task OnInitializedAsync() {
        autores = await AutorService.BuscarTodas();
    }

    async Task ApagarAutor(Guid id) {

        // exibe um alerta de confirmacao ao apagar autor
        bool confirm = await JSRuntime.InvokeAsync<bool>("confirm", "Tem certeza que deseja excluir esse autor?");

        // se a confirmacao for false para por aqui
        if (confirm is false)
            return;

        // se a confirmacao for true logaliza o autor pelo id
        var autor = await AutorService.BuscarPor(id);

        // apaga o autor encontrado
        await AutorService.Apagar(autor);

        // atualiza os autores que serao exibidos
        autores = await AutorService.BuscarTodas();

        StateHasChanged();
    }
}