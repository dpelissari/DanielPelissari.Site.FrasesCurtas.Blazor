@page "/int/autores"
@attribute [Authorize(Roles = "Administrador")]

@using FrasesCurtas.Models
@inject IJSRuntime JSRuntime
@inject FrasesCurtas.Services.IAutorService AutorService;
@using FrasesCurtas.Componentes;

<PageTitle>Autores</PageTitle>


<div class="container"
    <div class="novo-registro">
        <a href="/int/autores/adicionar-autor" class="btn">Incluir autor</a>
    </div>

    <div class="frases card lista-itens">
        <ListaPaginada Dados="autores">
            <ConteudoPrincipal>
                <div class="frase-item">

                    <div class="descricao">
                    <h3>Identificador</h3>
                        <p>@context.Id</p>
                    </div>

                    <div class="cadastro">
                        <h3>Nome</h3>
                        <p>@context.Nome</p>
                    </div>

                    <div class="status">
                        <h3>Cadastro</h3>
                        <p>@context.DataCadastro</p>
                    </div>

                <div class="status">
                    <h3>Arquivada?</h3>
                    <p>@(context.Ativo == true ? "Sim" : "Não")</p>
                </div>

                    <div class="acoes">
                        <a href="int/autores/atualizar-autor/@context.Id">Atualizar</a>
                        <button @onclick="async () => await ApagarFrase(context.Id)">Apagar</button>
                    </div>
                </div>
            </ConteudoPrincipal>
        </ListaPaginada>
    </div>
</div>



@code {
    private IQueryable<Autor> autores;

    // ao inicializar busca todos autores
    protected override async Task OnInitializedAsync() {
        autores = await AutorService.BuscarTodas();
    }

    async Task ApagarFrase(Guid id) {

        // exibe um alerta de confirmacao ao apagar autor
        bool confirm = await JSRuntime.InvokeAsync<bool>("confirm", "Tem certeza que deseja excluir esse autor?");

        // se a confirmacao for false para por aqui
        if (confirm is false)
            return;

        // se a confirmacao for true logaliza o autor pelo id
        var autor = await AutorService.BuscarPor(id);

        // apaga o autor encontrado
        await AutorService.Apagar(autor);

        // atualiza os autores que serao exibidos
        autores = await AutorService.BuscarTodas();

        StateHasChanged();
    }
}