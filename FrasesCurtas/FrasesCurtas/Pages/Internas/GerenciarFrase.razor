@page "/int/frases/gerenciar-frase/{id?}"
@page "/int/frases/nova/"
@attribute [Authorize(Roles = "Administrador")]

@using FrasesCurtas.Componentes
@using FrasesCurtas.Models
@inject NavigationManager NavigationManager
@inject FrasesCurtas.Services.IFraseService FraseService;
@inject FrasesCurtas.Services.IAutorService AutorService;
@inject FrasesCurtas.Services.ICategoriaFraseService CategoriaFraseService;
@layout InternasLayout

<div class="container">
    <div class="card mt80">
        @if (modoEdicao)
        {
            <h1>Editar Frase</h1>

            <EditForm Model="frase" OnValidSubmit="AtualizarFrases">

                <div class="cmp">
                    <label>Categoria</label>
                    <InputSelect @bind-Value="frase.IdCategoriaFrase">
                        <Repeater DataSource="categorias" Context="c">
                            <ItemTemplate>
                                <option value="@c.Id">@c.Categoria</option>
                            </ItemTemplate>
                        </Repeater>
                    </InputSelect>
                    <ValidationMessage For="@(() => frase.Categoria)" />
                </div>
                <div class="cmp">
                    <label>Arquvida</label>
                    <InputSelect @bind-Value="frase.Arquivada">
                        <option value="true">Sim</option>
                        <option value="false">Não</option>
                    </InputSelect>
                </div>
                <div class="cmp">
                    <label>Autor</label>
                    <InputSelect @bind-Value="frase.IdAutor">
                        <Repeater DataSource="autores" Context="a">
                            <ItemTemplate>
                                <option value="@a.Id">@a.Nome</option>
                            </ItemTemplate>
                        </Repeater>
                    </InputSelect>
                    <ValidationMessage For="@(() => frase.Autor)" />
                </div>
                <div class="cmp">
                    <label>Frase</label>
                    <InputTextArea @bind-Value="frase.Descricao" rows="5"></InputTextArea>
                    <ValidationMessage For="@(() => frase.Descricao)" />
                </div>

                <DataAnnotationsValidator />

                <div class="acoes mtb20">
                    <button class="btn btn-amarelo" type="submit">ATUALIZAR</button>
                    <NavLink class="btn btn-vermelho" href="int/frases/">CANCELAR</NavLink>
                </div>

            </EditForm>

        }
        else
        {
            <h1>Incluir Frase</h1>

            <EditForm Model="frase" OnValidSubmit="CriarFrase">
                <div>

                    <div class="cmp">
                        <label>Categoria</label>
                        <InputSelect @bind-Value="frase.IdCategoriaFrase">
                            <Repeater DataSource="categorias" Context="c">
                                <ItemTemplate>
                                    <option value="@c.Id">@c.Categoria</option>
                                </ItemTemplate>
                            </Repeater>
                        </InputSelect>
                        <ValidationMessage For="@(() => frase.Categoria)" />
                    </div>
                    <div class="cmp">
                        <label>Arquvida?</label>
                        <InputSelect @bind-Value="frase.Arquivada">
                            <option value="true">Sim</option>
                            <option value="false" selected>Não</option>
                        </InputSelect>
                    </div>
                     <div class="cmp">
                        <label>Autor</label>
                        <InputSelect @bind-Value="frase.IdAutor">
                            <Repeater DataSource="autores" Context="a">
                                <ItemTemplate>
                                    <option value="@a.Id">@a.Nome</option>
                                </ItemTemplate>
                            </Repeater>
                        </InputSelect>
                        <ValidationMessage For="@(() => frase.Autor)" />
                    </div>
                    <div class="cmp">
                        <label>Frase</label>
                        <InputTextArea @bind-Value="frase.Descricao" rows="5"></InputTextArea>
                        <ValidationMessage For="@(() => frase.Descricao)" />
                    </div>
                </div>

                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="acoes">
                    <button class="btn btn-amarelo" type="submit">INCLUIR</button>
                    <NavLink class="btn btn-vermelho" href="int/frases/">CANCELAR</NavLink>
                </div>
            </EditForm>
        }
    </div>
 
</div>

@code {
    Frase frase = new();
    private IQueryable<Autor> autores;
    private IQueryable<CategoriaFrase> categorias;
    bool modoEdicao = false;

    [Parameter]

    public string id { get; set; }
    protected override async Task OnInitializedAsync() {
        autores = await AutorService.BuscarTodas();
        categorias = await CategoriaFraseService.BuscarTodas();

        if (!string.IsNullOrEmpty(id))
        {
            if (Guid.TryParse(id, out Guid idFrase))
            {
                frase = await FraseService.BuscarPor(idFrase);
                modoEdicao = true;
            }
            else
            {
                // ID inválido, redireciona para listagem de frases
                NavigationManager.NavigateTo("/int/frases");
            }
        }
    }

    async Task CriarFrase() {
        frase.GerarNovoId();
        await FraseService.Adicionar(frase);
        NavigationManager.NavigateTo("/int/frases");
    }

    async Task AtualizarFrases() {
        await FraseService.Atualizar(frase);
        NavigationManager.NavigateTo("/int/frases");
    }
}
