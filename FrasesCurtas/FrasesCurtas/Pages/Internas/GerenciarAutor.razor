@page "/int/autores/gerenciar-autor/{id?}"
@page "/int/autores/novo/"
@attribute [Authorize(Roles = "Administrador")]

@using FrasesCurtas.Componentes
@using FrasesCurtas.Models
@inject NavigationManager NavigationManager
@inject FrasesCurtas.Services.IAutorService AutorService
@layout InternasLayout

<div class="container">
    @if (modoEdicao)
    {
        <h3>Atualizar Autor</h3>

        <EditForm Model="autor" OnValidSubmit="AtualizarAutores">
            <div>
                <label for="nomeAutor">Nome</label>
                <InputText @bind-Value="autor.Nome" class="form-control" id="nomeAutor"></InputText>
            </div>
            <div>
                <label for="dataCadastroAutor">Data Cadastro</label>
                <InputDate @bind-Value="autor.DataCadastro" id="dataCadastroAutor" />
            </div>
            <div>
                <label for="arquivadaFrase">Ativo?</label>
                <InputSelect @bind-Value="autor.Ativo" class="form-control">
                    <option value="true">Sim</option>
                    <option value="false">Não</option>
                </InputSelect>
            </div>
            <div>
                <ImagemUpload Modelo="@autor" DiretorioImagem="autores"></ImagemUpload>
            </div>

            <DataAnnotationsValidator />
            <ValidationSummary />

            <button type="submit">Salvar</button>
            <NavLink href="int/autores/">Cancelar</NavLink>

        </EditForm>
    }
    else
    {
        <h3>Adicionar Autor</h3>

        <EditForm Model="autor" OnValidSubmit="CriarAutor">
            <div>
                <label for="nomeAutor">Nome</label>
                <InputText @bind-Value="autor.Nome" class="form-control" id="autornome"></InputText>
            </div>
            <div>
                <label for="dataCadastroAutor">Data Cadastro</label>
                <InputDate @bind-Value="autor.DataCadastro" />
            </div>
            <div>
                <label for="arquivadaFrase">Ativo?</label>
                <InputSelect @bind-Value="autor.Ativo" class="form-control">
                    <option value="true">Sim</option>
                    <option value="false" selected>Não</option>

                </InputSelect>
            </div>

            <ImagemUpload Modelo="@autor" DiretorioImagem="autores" TextoLabel="Upload imagem" LarguraImagem="100" />

            <DataAnnotationsValidator />
            <ValidationSummary />

            <button type="submit">Incluir</button>
        </EditForm>
    }
</div>

@code {
    Autor autor = new();
    bool modoEdicao = false;

    [Parameter]
    public string id { get; set; }

    protected override async Task OnInitializedAsync() {
        if (!string.IsNullOrEmpty(id))
        {
            modoEdicao = true;
            autor = await AutorService.BuscarPor(Guid.Parse(id));
        }
    }

    async Task CriarAutor() {
        autor.GerarNovoId();
        await AutorService.Adicionar(autor);
        NavigationManager.NavigateTo("/int/autores");
    }

    async Task AtualizarAutores() {
        await AutorService.Atualizar(autor);
        NavigationManager.NavigateTo("/int/autores");
    }
}
