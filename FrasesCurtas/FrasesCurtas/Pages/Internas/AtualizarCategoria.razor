@page "/int/categorias/atualizar-categoria/{id}";
@attribute [Authorize(Roles = "Administrador")]

@using FrasesCurtas.Componentes
@using FrasesCurtas.Models;
@inject NavigationManager NavigationManager;
@inject FrasesCurtas.Services.ICategoriaFraseService CategoriaFraseService;

<div class="container">

    <h3>Atualizar Categoria</h3>

    <EditForm Model="categoria" OnValidSubmit="AtualizarCategoriaFrase">
        <div>
            <label>Categoria</label>
            <InputText @bind-Value="categoria.Categoria"></InputText>
        </div>
          <div>
            <label>Descrição</label>
            <InputText @bind-Value="categoria.Descricao"></InputText>
        </div>
        <div>
            <label>Data Cadastro</label>
            <InputDate @bind-Value="categoria.DataCadastro"/>
        </div>
        <div>
            <label>Ativo?</label>
               <InputSelect @bind-Value="categoria.Ativo">
                 <option value="true">Sim</option>
                 <option value="false">Não</option>
            </InputSelect>
        </div>

        <DataAnnotationsValidator />
        <ValidationSummary />

        <button type="submit">Salvar</button>
        <NavLink href="int/categorias/">Cancelar</NavLink>

    </EditForm>

</div>

@code {
    CategoriaFrase categoria = new();

    [Parameter]
    public string id{ get; set; }  

    protected override async Task OnInitializedAsync()
    {
        categoria = await CategoriaFraseService.BuscarPor(Guid.Parse(id));
    }

    async Task AtualizarCategoriaFrase() {
        await CategoriaFraseService.Atualizar(categoria);
        NavigationManager.NavigateTo("/int/categorias");
    }
}
