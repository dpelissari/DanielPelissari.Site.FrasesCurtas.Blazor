@page "/int/frases/adicionar-frase/";
@attribute [Authorize(Roles = "Administrador")]

@using FrasesCurtas.Componentes
@using FrasesCurtas.Models;
@using FrasesCurtas.Services
@inject NavigationManager NavigationManager;
@inject FrasesCurtas.Services.IFraseService FraseService;
@inject FrasesCurtas.Services.IAutorService AutorService;
@inject FrasesCurtas.Services.ICategoriaFraseService CategoriaFraseService;


<div class="container">
    <h3>AdicionarFrase</h3>

    <EditForm Model="frase" OnValidSubmit="CriarFrase">
        <div>
            <label>Categoria</label>
            <InputSelect @bind-Value="frase.IdCategoriaFrase">
                @foreach (var categoria in categorias)
                {
                    <option value="@categoria.Id">@categoria.Categoria</option>
                }
            </InputSelect>


            <label>Autor</label>
            <InputSelect @bind-Value="frase.IdAutor">
                @foreach (var autor in autores) {
                    <option value="@autor.Id">@autor.Nome</option>
                }
            </InputSelect>
            <label for="descricaoFrase">Frase</label>
            <InputText @bind-Value="frase.Descricao" id="descricaoFrase"></InputText>
        </div>
        <div>
            <label for="dataCadastroFrase">Data Cadastro</label>
            <InputDate @bind-Value="frase.DataCadastro" id="dataCadastroFrase"/>
        </div>
        <div>
            <label for="arquivadaFrase">Arquvida</label>
            <InputSelect @bind-Value="frase.Arquivada" class="form-control">
                 <option value="true">Sim</option>
                 <option value="false" selected>Não</option>
            </InputSelect>
        </div>

        <DataAnnotationsValidator />
        <ValidationSummary />

        <button type="submit">Incluir</button>
    </EditForm>
</div>

@code {
    Frase frase = new();
    private IQueryable<Autor> autores;
    private IQueryable<CategoriaFrase> categorias;

    async Task CriarFrase() {
        frase.GerarNovoId();
        await FraseService.Adicionar(frase);
        NavigationManager.NavigateTo("/int/frases");
    }

    // ao inicializar busca todos autores
    protected override async Task OnInitializedAsync() { 
        autores = await AutorService.BuscarTodas(); 
        categorias = await CategoriaFraseService.BuscarTodas();
    
    }
}
