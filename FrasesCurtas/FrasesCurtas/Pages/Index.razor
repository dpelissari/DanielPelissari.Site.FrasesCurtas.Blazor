@page "/"
@using FrasesCurtas.Models
@inject FrasesCurtas.Services.IFraseService FraseService
@inject FrasesCurtas.Services.IAutorService AutorService
@using FrasesCurtas.Componentes;

<PageTitle>Frases</PageTitle>

    <ListaPaginada Dados="frases">
      <ConteudoCabecalho>
        <tr>
          <th>Identificador</th>
          <th>Frase</th>
          <th>Autor</th>
          <th>Data Cadastro</th>
          <th>Arquivada?</th>
        </tr>
      </ConteudoCabecalho>
      <ConteudoPrincipal>
          <tr>
            <td>@context.Id</td>
            <td>@context.Descricao</td>
            <td>@context.Autor?.Nome</td>
            <td>@context.DataCadastro</td>
            <td>@context.Arquivada</td>
            </tr>
      </ConteudoPrincipal>
    </ListaPaginada>
  


@code {
    private IQueryable<Frase> frases;

    // ao inicializar busca todas frases
    protected override async Task OnInitializedAsync() { 
        frases = await FraseService.BuscarTodas(); 

        // alimenta autores
        foreach (var frase in frases){
            frase.Autor = await AutorService.BuscarPor(frase.IdAutor);    
        }
    }
}