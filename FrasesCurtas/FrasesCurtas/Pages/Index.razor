@page "/"
@using FrasesCurtas.Models
@inject FrasesCurtas.Services.IFraseService FraseService
@inject FrasesCurtas.Services.IAutorService AutorService
@inject NavigationManager NavigationManager
@using FrasesCurtas.Componentes;
@using FrasesCurtas.Models.Interop;
@inject FrasesCurtas.Services.ICategoriaFraseService CategoriaFraseService;
<PageTitle>Frases</PageTitle>

<div class="container">
    <ListaPaginada Dados="frases.Where(f => f.Arquivada == false).OrderBy(f => f.DataCadastro)" QtdeItensPorPagina="10">

        <ConteudoPrincipal>
            <div class="card sombra">
                <p class="categoria">@context.Categoria?.Categoria</p>
                <p class="frase">@context.Descricao</p>
                <p class="autor">Autor: @context.Autor?.Nome</p>

                <div class="compartilhamento">
                    <p>Compartilhar essa frase:</p>
                    <div>
                        <a class="whatsApp" href="https://wa.me/?text=@context.Descricao por @context.Autor.Nome. Frase compartilhada via site frasescurtas.com.br" target="_blank">
                            <img src="imagens/icones/ico-whatsapp.svg" width="20" height="20" alt="Icone WhatsApp" />
                        </a>
                        <a class="telegram" href="https://telegram.me/share/url?url=@currentUrl&text=@context.Descricao por @context.Autor.Nome. Frase compartilhada via site frasescurtas.com.br." target="_blank">
                            <img src="imagens/icones/ico-telegram.svg" width="20" height="20" alt="Icone Telegram" />
                        </a>
                        <button class="clipboard" onclick="copiarFrase('@context.Descricao', '@context.Autor?.Nome');">
                            <img src="imagens/icones/ico-clipboard.svg" width="20" height="20" alt="Icone copiar mensagem" />
                        </button>
                    </div>
                </div>
            </div>
        </ConteudoPrincipal>
    </ListaPaginada>

    <ObservadorTamanhoJanela AoRedimensionar="Redimensionou" />
   @* @_ehCelular*@

</div>
 
@code {
    private IQueryable<Frase> frases;
    private string currentUrl;

    // ao inicializar busca todas frases
    protected override async Task OnInitializedAsync() { 

        //url atual
        currentUrl = NavigationManager.Uri;

        frases = await FraseService.BuscarTodas(); 

        // alimenta autores e categoria
        foreach (var frase in frases){
            frase.Autor = await AutorService.BuscarPor(frase.IdAutor);
            frase.Categoria = await CategoriaFraseService.BuscarPor(frase.IdCategoriaFrase);
        }
    }

    public Dimensao? Dimensao { get; private set; }

    private bool _ehCelular = false;

    private async Task Redimensionou(Dimensao dimensao) {
        _ehCelular = dimensao.Largura <= 640;
        Dimensao = dimensao;
        await Task.CompletedTask;
    }
}