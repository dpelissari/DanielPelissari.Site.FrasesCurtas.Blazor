@using FrasesCurtas.Models;
@using FrasesCurtas.Services;
@inject FrasesCurtas.Services.IAutorService AutorService;
@inject FrasesCurtas.Services.ICategoriaFraseService CategoriaFraseService;
@inject FrasesCurtas.Services.IFraseService FraseService;

<section class="outdoor">
    <div class="container">
        <div class="card sombra">
            <div>
                <div class="frase">
                    <p class="categoria">@frase.Categoria?.Categoria</p>
                    <h1>@frase.Descricao</h1>
                    <p class="autor">Por: @frase.Autor?.Nome</p>
                </div>
                <div>
                    <button class="btn-frase-aleatoria" @onclick="FraseAleatoria">
                        <img src="imagens/icones/ico-atualizar.svg" width="40" height="40" alt="Trocar frase" />
                    </button>
                </div>
            </div>
   
        </div>
    </div>
</section>

@code {
    private Frase frase = new();

    protected override async Task OnInitializedAsync() {
        await FraseAleatoria();
    }

    private async Task FraseAleatoria() {
        var todasFrases = await FraseService.BuscarTodas();
        var random = new Random();
        var index = random.Next(todasFrases.Count());
        frase = todasFrases.ElementAt(index);
        frase.Autor = await AutorService.BuscarPor(frase.IdAutor);
        frase.Categoria  = await CategoriaFraseService.BuscarPor(frase.IdCategoriaFrase);
    }
}